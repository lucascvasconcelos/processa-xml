openapi: 3.0.3
info:
    title: Laravel
    description: ''
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /api/user:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: Unauthenticated.
                                properties:
                                    message: { type: string, example: Unauthenticated. }
            tags:
                - Endpoints
            security: []
    /api/pessoas:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, name: 'Name 1', created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 2, name: 'Name 2', created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 3, name: 'Name 3', created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
            tags:
                - Endpoints
            security: []
    /api/shiporders:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, pessoa: 1, shipto_id: 1, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 2, pessoa: 2, shipto_id: 2, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 3, pessoa: 3, shipto_id: 3, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
            tags:
                - Endpoints
            security: []
    /api/shiptos:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, name: 'Name 1', address: 'Address 1', city: 'City 1', country: 'Country 1', created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 2, name: 'Name 2', address: 'Address 2', city: 'City 2', country: 'Country 2', created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 3, name: 'Name 3', address: 'Address 3', city: 'City 3', country: 'Country 3', created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
            tags:
                - Endpoints
            security: []
    /api/items:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, title: 'Title 1', note: 'Note 1', quantity: 745, price: 123.45, shiporder_id: 1, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 2, title: 'Title 2', note: 'Note 2', quantity: 45, price: 13.45, shiporder_id: 2, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 3, title: 'Title 3', note: 'Note 3', quantity: 5, price: 1.12, shiporder_id: 3, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 4, title: 'Title 4', note: 'Note 4', quantity: 2, price: 77.12, shiporder_id: 3, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
            tags:
                - Endpoints
            security: []
    /api/phones:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                example:
                                    - { id: 1, number: '2345678', pessoa: 1, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 2, number: '1234567', pessoa: 1, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 3, number: '4444444', pessoa: 2, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 4, number: '7777777', pessoa: 3, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
                                    - { id: 5, number: '8888888', pessoa: 3, created_at: '2020-12-13T16:03:26.000000Z', updated_at: '2020-12-13T16:03:26.000000Z' }
            tags:
                - Endpoints
            security: []
    /:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Laravel</title>\n\n        <!-- Fonts -->\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1\" crossorigin=\"anonymous\">\n\n\n        <!-- Styles -->\n        <style>\n            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-t{border-top-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@media (min-width:640px){.sm\\:rounded-lg{border-radius:.5rem}.sm\\:block{display:block}.sm\\:items-center{align-items:center}.sm\\:justify-start{justify-content:flex-start}.sm\\:justify-between{justify-content:space-between}.sm\\:h-20{height:5rem}.sm\\:ml-0{margin-left:0}.sm\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\\:pt-0{padding-top:0}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width:768px){.md\\:border-t-0{border-top-width:0}.md\\:border-l{border-left-width:1px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}}\n        </style>\n\n        <style>\n            body {\n                font-family: 'Nunito';\n            }\n        </style>\n    </head>\n    <body class=\"antialiased\">\n        <div class=\"relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center sm:pt-0\">\n            <form method=\"post\" action=\"/upload\" enctype=\"multipart/form-data\">\n                <input type=\"hidden\" name=\"_token\" value=\"cAziZKwIybGywq7qx3IyP0efefxzzMBWHtuukIgz\">\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlFile1\">XML Encomenda</label>\n                    <input type=\"file\" name=\"file-encomenda\" class=\"form-control-file\" id=\"file-encomenda\">\n                </div>\n                <br>\n                <br>\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlFile1\">XML Pessoa</label>\n                    <input type=\"file\" name=\"file-person\" class=\"form-control-file\" id=\"file-person\" required>\n                </div>\n                <br>\n                <br>\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW\" crossorigin=\"anonymous\"></script>\n    </body>\n</html>\n"
            tags:
                - Endpoints
            security: []
    /upload:
        post:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Endpoints
            security: []
